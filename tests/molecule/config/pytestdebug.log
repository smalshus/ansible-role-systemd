versions pytest-8.3.4, python-3.12.3.final.0
invocation_dir=/home/ahmad/lab/ansible-role-systemd/tests/molecule/config
cwd=/home/ahmad/lab/ansible-role-systemd/tests/molecule/config
args=('--ansible-inventory', '/home/ahmad/.cache/molecule/tests/config/inventory', '--connection', 'ansible', '--debug', '-p', 'no:cacheprovider', '/home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', '-vvv')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x75cf0e487830>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x75cf0e487830>
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
          plugin_name: 129532158090352
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x75cf0e487830>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'testinfra.plugin' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/plugin.py'>
          plugin_name: pytest11.testinfra
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x75cf0e7f60f0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x75cf0e3a4d40>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
          plugin_name: 129532158090352
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x75cf0e487830>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'testinfra.plugin' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/plugin.py'>
          plugin_name: pytest11.testinfra
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x75cf0e7f60f0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x75cf0e3a4d40>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x75cf0e350590>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x75cf0e451c70>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x75cf0e487830>
          start_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config
          startdir: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: /home/ahmad', 'plugins: testinfra-10.1.1'], ['using: pytest-8.3.4', 'registered third-party plugins:', '  pytest-testinfra-10.1.1 at /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /home/ahmad
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir ahmad> [hook]
            pytest_collectstart [hook]
                collector: <Dir ahmad>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir ahmad>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.ansible
                  path: /home/ahmad/.ansible
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.ansible_async
                  path: /home/ahmad/.ansible_async
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.azure
                  path: /home/ahmad/.azure
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.bash_history
                  path: /home/ahmad/.bash_history
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.bash_history
                  path: /home/ahmad/.bash_history
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.bash_logout
                  path: /home/ahmad/.bash_logout
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.bash_logout
                  path: /home/ahmad/.bash_logout
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.bashrc
                  path: /home/ahmad/.bashrc
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.bashrc
                  path: /home/ahmad/.bashrc
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.cache
                  path: /home/ahmad/.cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.config
                  path: /home/ahmad/.config
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.docker
                  path: /home/ahmad/.docker
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.dotnet
                  path: /home/ahmad/.dotnet
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.gitconfig
                  path: /home/ahmad/.gitconfig
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.gitconfig
                  path: /home/ahmad/.gitconfig
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.gnome
                  path: /home/ahmad/.gnome
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.gnupg
                  path: /home/ahmad/.gnupg
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.lesshst
                  path: /home/ahmad/.lesshst
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.lesshst
                  path: /home/ahmad/.lesshst
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.local
                  path: /home/ahmad/.local
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.net
                  path: /home/ahmad/.net
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.npm
                  path: /home/ahmad/.npm
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.pki
                  path: /home/ahmad/.pki
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.profile
                  path: /home/ahmad/.profile
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.profile
                  path: /home/ahmad/.profile
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.selected_editor
                  path: /home/ahmad/.selected_editor
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.selected_editor
                  path: /home/ahmad/.selected_editor
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.ssh
                  path: /home/ahmad/.ssh
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.sudo_as_admin_successful
                  path: /home/ahmad/.sudo_as_admin_successful
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.sudo_as_admin_successful
                  path: /home/ahmad/.sudo_as_admin_successful
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.viminfo
                  path: /home/ahmad/.viminfo
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.viminfo
                  path: /home/ahmad/.viminfo
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.vscode
                  path: /home/ahmad/.vscode
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/.wget-hsts
                  path: /home/ahmad/.wget-hsts
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/.wget-hsts
                  path: /home/ahmad/.wget-hsts
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Desktop
                  path: /home/ahmad/Desktop
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Desktop
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Desktop> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Documents
                  path: /home/ahmad/Documents
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Documents
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Documents> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Downloads
                  path: /home/ahmad/Downloads
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Downloads
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Downloads> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Music
                  path: /home/ahmad/Music
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Music
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Music> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Pictures
                  path: /home/ahmad/Pictures
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Pictures
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Pictures> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Public
                  path: /home/ahmad/Public
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Public
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Public> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Templates
                  path: /home/ahmad/Templates
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Templates
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Templates> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/Videos
                  path: /home/ahmad/Videos
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/Videos
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir Videos> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/healthcheck.log
                  path: /home/ahmad/healthcheck.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/healthcheck.log
                  path: /home/ahmad/healthcheck.log
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir lab> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/snap
                  path: /home/ahmad/snap
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/snap
                  parent: <Dir ahmad>
              finish pytest_collect_directory --> <Dir snap> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/wireguard-tools-1.0.20210424.tar.xz
                  path: /home/ahmad/wireguard-tools-1.0.20210424.tar.xz
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ahmad>
                  file_path: /home/ahmad/wireguard-tools-1.0.20210424.tar.xz
                  path: /home/ahmad/wireguard-tools-1.0.20210424.tar.xz
              finish pytest_collect_file --> [] [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=10 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir lab>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir lab>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/O1
                  path: /home/ahmad/lab/O1
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/O1
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir O1> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/O1ahmad
                  path: /home/ahmad/lab/O1ahmad
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/O1ahmad
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir O1ahmad> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/O1infra
                  path: /home/ahmad/lab/O1infra
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/O1infra
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir O1infra> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-journald
                  path: /home/ahmad/lab/ansible-role-journald
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-journald
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir ansible-role-journald> [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir ansible-role-systemd> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/basic-service
                  path: /home/ahmad/lab/basic-service
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/basic-service
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir basic-service> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/cli-parser
                  path: /home/ahmad/lab/cli-parser
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/cli-parser
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir cli-parser> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/cloud-node
                  path: /home/ahmad/lab/cloud-node
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/cloud-node
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir cloud-node> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/gcp-service-account.json
                  path: /home/ahmad/lab/gcp-service-account.json
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/gcp-service-account.json
                  path: /home/ahmad/lab/gcp-service-account.json
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/image-to-emoji-converter.py
                  path: /home/ahmad/lab/image-to-emoji-converter.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/image-to-emoji-converter.py
                  path: /home/ahmad/lab/image-to-emoji-converter.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/modern-terminal.webp
                  path: /home/ahmad/lab/modern-terminal.webp
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/modern-terminal.webp
                  path: /home/ahmad/lab/modern-terminal.webp
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/nginx-1.21.6
                  path: /home/ahmad/lab/nginx-1.21.6
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/nginx-1.21.6
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir nginx-1.21.6> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/nginx-1.21.6.tar.gz
                  path: /home/ahmad/lab/nginx-1.21.6.tar.gz
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/nginx-1.21.6.tar.gz
                  path: /home/ahmad/lab/nginx-1.21.6.tar.gz
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/requirements.txt
                  path: /home/ahmad/lab/requirements.txt
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/requirements.txt
                  path: /home/ahmad/lab/requirements.txt
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/slash.png
                  path: /home/ahmad/lab/slash.png
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/slash.png
                  path: /home/ahmad/lab/slash.png
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/slash_emoji.png
                  path: /home/ahmad/lab/slash_emoji.png
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/slash_emoji.png
                  path: /home/ahmad/lab/slash_emoji.png
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/tmp
                  path: /home/ahmad/lab/tmp
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir lab>
                  file_path: /home/ahmad/lab/tmp
                  path: /home/ahmad/lab/tmp
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/venv
                  path: /home/ahmad/lab/venv
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/wireguard-linux
                  path: /home/ahmad/lab/wireguard-linux
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/wireguard-linux
                  parent: <Dir lab>
              finish pytest_collect_directory --> <Dir wireguard-linux> [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab' lenresult=10 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir ansible-role-systemd>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir ansible-role-systemd>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/.git
                  path: /home/ahmad/lab/ansible-role-systemd/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/.github
                  path: /home/ahmad/lab/ansible-role-systemd/.github
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/.gitignore
                  path: /home/ahmad/lab/ansible-role-systemd/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/.gitignore
                  path: /home/ahmad/lab/ansible-role-systemd/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/.travis.yml
                  path: /home/ahmad/lab/ansible-role-systemd/.travis.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/.travis.yml
                  path: /home/ahmad/lab/ansible-role-systemd/.travis.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/CONTRIBUTING.md
                  path: /home/ahmad/lab/ansible-role-systemd/CONTRIBUTING.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/CONTRIBUTING.md
                  path: /home/ahmad/lab/ansible-role-systemd/CONTRIBUTING.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/Gemfile
                  path: /home/ahmad/lab/ansible-role-systemd/Gemfile
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/Gemfile
                  path: /home/ahmad/lab/ansible-role-systemd/Gemfile
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/Gemfile.lock
                  path: /home/ahmad/lab/ansible-role-systemd/Gemfile.lock
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/Gemfile.lock
                  path: /home/ahmad/lab/ansible-role-systemd/Gemfile.lock
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/README.md
                  path: /home/ahmad/lab/ansible-role-systemd/README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/README.md
                  path: /home/ahmad/lab/ansible-role-systemd/README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/defaults
                  path: /home/ahmad/lab/ansible-role-systemd/defaults
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/defaults
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir defaults> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/handlers
                  path: /home/ahmad/lab/ansible-role-systemd/handlers
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/handlers
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir handlers> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/kitchen.yml
                  path: /home/ahmad/lab/ansible-role-systemd/kitchen.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir ansible-role-systemd>
                  file_path: /home/ahmad/lab/ansible-role-systemd/kitchen.yml
                  path: /home/ahmad/lab/ansible-role-systemd/kitchen.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/meta
                  path: /home/ahmad/lab/ansible-role-systemd/meta
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/meta
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir meta> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tasks
                  path: /home/ahmad/lab/ansible-role-systemd/tasks
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tasks
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir tasks> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/templates
                  path: /home/ahmad/lab/ansible-role-systemd/templates
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/templates
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir templates> [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir tests> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/vars
                  path: /home/ahmad/lab/ansible-role-systemd/vars
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/vars
                  parent: <Dir ansible-role-systemd>
              finish pytest_collect_directory --> <Dir vars> [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd' lenresult=7 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/ansible-lint.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/ansible-lint.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/ansible-lint.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/ansible-lint.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/inventory
                  path: /home/ahmad/lab/ansible-role-systemd/tests/inventory
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/inventory
                  path: /home/ahmad/lab/ansible-role-systemd/tests/inventory
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule
                  parent: <Dir tests>
              finish pytest_collect_directory --> <Dir molecule> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/test.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/test.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/test.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/test.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/yaml-lint.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/yaml-lint.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/yaml-lint.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/yaml-lint.yml
              finish pytest_collect_file --> [] [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd/tests' lenresult=1 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir molecule>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir molecule>
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config
                  parent: <Dir molecule>
              finish pytest_collect_directory --> <Dir config> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/launch
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/launch
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/launch
                  parent: <Dir molecule>
              finish pytest_collect_directory --> <Dir launch> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/prepare.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/prepare.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir molecule>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/prepare.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/prepare.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/uninstall
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/uninstall
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/uninstall
                  parent: <Dir molecule>
              finish pytest_collect_directory --> <Dir uninstall> [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd/tests/molecule' lenresult=3 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir config>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir config>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/converge.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/converge.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir config>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/converge.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/converge.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/molecule.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/molecule.yml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir config>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/molecule.yml
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/molecule.yml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/pytestdebug.log
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir config>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/pytestdebug.log
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_collect_directory [hook]
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests
                  parent: <Dir config>
              finish pytest_collect_directory --> <Dir tests> [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd/tests/molecule/config' lenresult=1 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x75cf0e487830>
                  collection_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/__pycache__
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py
                  path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir tests>
                    module_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py
                    path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py
                finish pytest_pycollect_makemodule --> <Module test_systemd_units.py> [hook]
              finish pytest_collect_file --> [<Module test_systemd_units.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd/tests/molecule/config/tests' lenresult=1 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_systemd_units.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_systemd_units.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_systemd_units.py>
      find_module called for: test_systemd_units [assertion]
      matched test file (was specified on cmdline): '/home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py' [assertion]
      found cached rewritten pyc for /home/ahmad/lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_systemd_units.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_systemd_units.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_systemd_units.py>
            name: pytest
            obj: <module 'pytest' from '/home/ahmad/lab/venv/lib/python3.12/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_systemd_units.py>
            name: test_unit_files
            obj: <function test_unit_files at 0x75cf0e3c9c60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x75cf0e350920>
          matched marked file 'testinfra.backend.ansible' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.ansible [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/backend/ansible.py [assertion]
          matched marked file 'testinfra.utils' (from 'testinfra') [assertion]
          find_module called for: testinfra.utils [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/utils/__init__.py [assertion]
          matched marked file 'testinfra.utils.ansible_runner' (from 'testinfra') [assertion]
          find_module called for: testinfra.utils.ansible_runner [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/utils/ansible_runner.py [assertion]
          early skip of rewriting module: configparser [assertion]
          matched marked file 'testinfra.backend.local' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.local [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/backend/local.py [assertion]
          early skip of rewriting module: encodings.unicode_escape [assertion]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: /etc/systemd/system/test-service.service
                argname: file_path
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: owner
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: group
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: 420
                argname: mode
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: ['Description=', 'ExecStart=', 'WantedBy=']
                argname: content_matches
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: /etc/systemd/system/test-service.socket
                argname: file_path
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: owner
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: group
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: 420
                argname: mode
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: ['Description=', 'ListenStream=', 'WantedBy=']
                argname: content_matches
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: /run/systemd/system/tmp-stdin.mount
                argname: file_path
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: owner
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: group
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: 420
                argname: mode
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: ['Description=', 'What=', 'WantedBy=']
                argname: content_matches
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: /etc/systemd/system/test-target.target
                argname: file_path
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: owner
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: root
                argname: group
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: 420
                argname: mode
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: ['Description=', 'Wants=', 'PartOf=']
                argname: content_matches
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>, <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_systemd_units.py>
            name: test_service_installed
            obj: <function test_service_installed at 0x75cf0e3c98a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x75cf0e350920>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x75cf0e487830>
                val: test-service
                argname: service_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_service_installed[ansible://instance-test-service]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_service_installed[ansible://instance-test-service]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_service_installed[ansible://instance-test-service]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x75cf0e487830>
          items: [<Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>, <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>, <Function test_service_installed[ansible://instance-test-service]>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x75cf0e487830>
            items: [<Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>, <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>, <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>, <Function test_service_installed[ansible://instance-test-service]>]
            start_path: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config
            startdir: /home/ahmad/lab/ansible-role-systemd/tests/molecule/config
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=5>
      pytest_runtest_protocol [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
          nextitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
        pytest_runtest_logstart [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope='module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> <testinfra.host.Host ansible://instance> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='host' scope='module' baseid=''>
              request: <SubRequest 'host' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> <testinfra.host.Host ansible://instance> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> /etc/systemd/system/test-service.service [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> 420 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_setup --> ['Description=', 'ExecStart=', 'WantedBy='] [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
          matched marked file 'testinfra.modules.file' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.file [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/modules/file.py [assertion]
          matched marked file 'testinfra.modules.systeminfo' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.systeminfo [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/modules/systeminfo.py [assertion]
          matched marked file 'testinfra.backend.docker' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.docker [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/backend/docker.py [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
            nextitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
          nextitem: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
        pytest_runtest_logstart [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_setup --> /etc/systemd/system/test-service.socket [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_setup --> 420 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_setup --> ['Description=', 'ListenStream=', 'WantedBy='] [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
            nextitem: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-service.socket-root-root-420-content_matches1]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
          nextitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
        pytest_runtest_logstart [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_setup --> /run/systemd/system/tmp-stdin.mount [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_setup --> 420 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_setup --> ['Description=', 'What=', 'WantedBy='] [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
            nextitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/run/systemd/system/tmp-stdin.mount-root-root-420-content_matches2]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
          nextitem: <Function test_service_installed[ansible://instance-test-service]>
        pytest_runtest_logstart [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_setup --> /etc/systemd/system/test-target.target [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_setup --> root [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_setup --> 420 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_setup --> ['Description=', 'Wants=', 'PartOf='] [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
            nextitem: <Function test_service_installed[ansible://instance-test-service]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='content_matches' scope='function' baseid=''>
              request: <SubRequest 'content_matches' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='mode' scope='function' baseid=''>
              request: <SubRequest 'mode' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='group' scope='function' baseid=''>
              request: <SubRequest 'group' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='owner' scope='function' baseid=''>
              request: <SubRequest 'owner' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='file_path' scope='function' baseid=''>
              request: <SubRequest 'file_path' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 2, 'test_unit_files[ansible://instance-/etc/systemd/system/test-target.target-root-root-420-content_matches3]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_service_installed[ansible://instance-test-service]>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 44, 'test_service_installed[ansible://instance-test-service]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='service_name' scope='function' baseid=''>
              request: <SubRequest 'service_name' for <Function test_service_installed[ansible://instance-test-service]>>
          finish pytest_fixture_setup --> test-service [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_service_installed[ansible://instance-test-service]>
          matched marked file 'testinfra.modules.service' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.service [assertion]
          found cached rewritten pyc for /home/ahmad/lab/venv/lib/python3.12/site-packages/testinfra/modules/service.py [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='service_name' scope='function' baseid=''>
              request: <SubRequest 'service_name' for <Function test_service_installed[ansible://instance-test-service]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope='module' baseid=''>
              request: <SubRequest 'host' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope='module' baseid=''>
              request: <SubRequest 'host' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope='module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_unit_files[ansible://instance-/etc/systemd/system/test-service.service-root-root-420-content_matches0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_service_installed[ansible://instance-test-service]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x75cf0e487830>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py::test_service_installed[ansible://instance-test-service]
            location: ('lab/ansible-role-systemd/tests/molecule/config/tests/test_systemd_units.py', 44, 'test_service_installed[ansible://instance-test-service]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=5>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x75cf0e7f60f0>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x75cf0e487830>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x75cf0e487830>
    finish pytest_unconfigure --> [] [hook]
